/// <reference path="../ts/typings/tsd.d.ts" />
import { BlockoCore } from "./BlockoCore";
export declare module BlockoSnapRenderer {
    class Point {
        x: number;
        y: number;
        constructor(x: number, y: number);
        plus(p: Point): Point;
        minus(p: Point): Point;
    }
    class RendererController {
        snapPaper: Snap.Paper;
        editorSvgElement: HTMLElement;
        editorMainElement: HTMLElement;
        sTempConnectionLine: Snap.Element;
        private rendererConfig;
        constructor(editorElement: HTMLElement);
        initSnapCompnents(): void;
        private openConfigCallback;
        registerOpenConfigCallback(callback: (block: BlockoCore.Block) => void): void;
        callOpenConfigCallback(block: BlockoCore.Block): void;
        private cumulativeOffset(element);
        getPaperAbsolutePosition(): {
            top: number;
            left: number;
        };
        globalPointToLocal(point: Point): Point;
        localPointToGlobal(point: Point): Point;
        private currentConnectorRenderer;
        private currentStartPoint;
        private currentLastPoint;
        tempConnectionLineStart(connectorRenderer: ConnectorRenderer, point: Point): void;
        tempConnectionLineMove(connectorRenderer: ConnectorRenderer, diffPoint: Point): void;
        tempConnectionLineEnd(connectorRenderer: ConnectorRenderer): void;
    }
    class BlockRenderer implements BlockoCore.IBlockRenderer {
        private controller;
        private block;
        private rendererConfig;
        private sMainGroup;
        private sMainSquare;
        private sTextBlockType;
        private sTextBlockName;
        private sButton;
        private sDeleteButton;
        private sConfigButton;
        private sInputs;
        private sOutputs;
        constructor(controller: RendererController, block: BlockoCore.Block);
        initSnapCompnents(): void;
        refreshConnectors(): void;
        refresh(): void;
        destroy(): void;
        getConnectorPosition(name: string): Point;
    }
    class ConnectorRenderer {
        static idClass: string;
        private controller;
        private sMainGroup;
        connector: BlockoCore.Connector;
        private rendererConfig;
        x: number;
        y: number;
        private sConnectorObject;
        constructor(x: number, y: number, controller: RendererController, sMainGroup: Snap.Element, connector: BlockoCore.Connector);
        getPosition(): Point;
        setY(y: number): void;
        initSnapCompnents(): void;
        destroy(): void;
        refresh(): void;
    }
    class ConnectionRenderer implements BlockoCore.IConnectionRenderer {
        private controller;
        private connection;
        private rendererConfig;
        private sLine;
        private sDeleteButton;
        constructor(controller: RendererController, connection: BlockoCore.Connection);
        initSnapCompnents(): void;
        destroy(): void;
        refresh(): void;
    }
}
