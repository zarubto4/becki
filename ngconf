server {
      listen 80;
      listen [::]:80;

      server_name portal.stage.byzance.cz;

      return 301 https://$server_name$request_uri;
}

server {

      listen 443 ssl http2;
      listen [::]:443 ssl http2;

      include snippets/ssl-portal.stage.byzance.cz.conf;
      include snippets/ssl-params.conf;

      server_name portal.stage.byzance.cz;

      root /var/becki/dist;
      index index.html;

      location / {
              try_files $uri /index.html =404;
              add_header Cache-Control 'must-revalidate, proxy-revalidate, max-age=86400';
      }
}

server {
       listen 80 default_server;
       listen [::]:80 default_server;

       # SSL configuration
       #
       # listen 443 ssl default_server;
       # listen [::]:443 ssl default_server;
       #
       # Note: You should disable gzip for SSL traffic.
       # See: https://bugs.debian.org/773332
       #
       # Read up on ssl_ciphers to ensure a secure configuration.
       # See: https://bugs.debian.org/765782
       #
       # Self signed certs generated by the ssl-cert package
       # Don't use them in a production server!
       #
       # include snippets/snakeoil.conf;

       root /var/www/html;

       # Add index.php to the list if you are using PHP
       index index.html index.htm index.nginx-debian.html;

       server_name _;

       location / {
               # First attempt to serve request as file, then
               # as directory, then fall back to displaying a 404.
               try_files $uri $uri/ =404;
       }

       # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
       #
       #location ~ \.php$ {
       #       include snippets/fastcgi-php.conf;
       #
       #       # With php7.0-cgi alone:
       #       fastcgi_pass 127.0.0.1:9000;
       #       # With php7.0-fpm:
       #       fastcgi_pass unix:/run/php/php7.0-fpm.sock;
       #}

       # deny access to .htaccess files, if Apache's document root
       # concurs with nginx's one
       #
       #location ~ /\.ht {
       #       deny all;
       #}

       location ~ /.well-known {
               allow all;
       }

}